# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  ci:
    runs-on: ubuntu-latest
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub PostgreSQL image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: prisma
          POSTGRES_DB: tests
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

    strategy:
      matrix:
        node-version: [22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Initialise environment variables
      run: |
        touch apps/back-end/.env.test
        touch apps/back-end/.env.development
        touch packages/prisma-client/.env
        echo DATABASE_URL="${{ secrets.DATABASE_URL }}" >> apps/back-end/.env.test
        echo DATABASE_URL="${{ secrets.DATABASE_URL }}" >> apps/back-end/.env.development
        echo DATABASE_URL="${{ secrets.DATABASE_URL }}" >> packages/prisma-client/.env.test
    - name: Install dependencies
      run: npm ci
    - name: Build packages
      run: npm run build --if-present
    - name: Generate Prisma Client
      run: |
        npm run migrate-deploy
        npm run generate-from-back-end
    - name: Run linting checks
      run: npm run lint
    - name: Run tests
      run: npm test
